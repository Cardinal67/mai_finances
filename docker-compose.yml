# Docker Compose Configuration
# Created: 2025-10-20T00:21:00Z
# Description: Complete application stack

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: finance_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: finance_backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./backend/src:/app/src
    ports:
      - "3001:3001"
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: finance_frontend
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    ports:
      - "3000:3000"

  nginx:
    image: nginx:alpine
    container_name: finance_nginx
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./uploads:/usr/share/nginx/html/uploads:ro
    ports:
      - "80:80"
      - "443:443"

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: finance_network

